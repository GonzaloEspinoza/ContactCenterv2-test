@using Entidad;
@using DataP;
@using Entidad.Enums;
@using Backend.Models;
@model  EPerfil
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    string accion = "NuevoPerfil";
    string h = Model == null ? "true" : Model.Habilitado ? "true" : "false";

    try
    {
        accion = ViewBag.Accion;
    }
    catch
    {
        accion = "NuevoPerfil";
    }
    string lblBotonGuardar = "Guardar";
    if (accion.ToUpper().Equals("NUEVOPERFIL"))
    {
        lblBotonGuardar = "Guardar";
    }
    else
    {
        lblBotonGuardar = "Actualizar";
    }

    List<EPermiso> Permisos = new List<EPermiso>();
    try
    {
        Permisos = ViewBag.Permisos;
    }
    catch
    {
        Permisos = new List<EPermiso>();
    }
    Usuario oUsuario = Util.SessionToUsuario<Usuario>(Session["Usuario"]);
}
@section EtiquetaHead
{
    <link href="@Url.Content("~/Content/jstree.min.css")" rel="stylesheet" />
    @*<link href="@Url.Content("~/Scripts/metronic/global/plugins/jstree/dist/themes/default/style.min.css")" rel="stylesheet" />*@
    @*<script src="@Url.Content("~/Scripts/jstree.min.js")" type="text/javascript"></script>*@
    <script src="@Url.Content("~/Scripts/metronic/global/plugins/jstree/dist/jstree.min.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/metronic/global/plugins/bootstrap-select/css/bootstrap-select.min.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Content/metronic/global/plugins/bootstrap-select/js/bootstrap-select.js")"></script>
    <link href="@Url.Content("~/Content/button/bttons.css")" rel="stylesheet" />
    <style>
        .lbjs {
            height: 385px !important;
        }
    </style>

    <script>
        $(document).ready(function () {
            $.blockUI.defaults.overlayCSS.cursor = 'default';
            $.jstree.defaults.core.themes.icons = false;
            $.jstree.defaults.core.themes.dots = false;
            $.jstree.defaults.core.animation = 50;
            $('#EstadoPerfil')[0].checked = @h;
            $('#perfilesPermisos')
                .bind("loaded.jstree", function (e, data) {
                    console.log(data.instance);
                    data.instance.open_all();
                    var context = data.instance;
                    var lstNodes = context.get_children_dom($(this));
                    $(lstNodes).each(function (i) {
                        if ($(this).data("checked").toString() == "True") {
                            context.select_node($(this));
                        } else {
                            context.deselect_node($(this));
                        }
                        context.refresh();
                        var childNodes = context.get_children_dom($(this));
                        checkPermisoRecursivo(childNodes, context);
                    });
                })
                .bind("changed.jstree", function () {
                    getPermisos();
                })
                .jstree({
                    "plugins": ["themes", "checkbox", "types"],
                });
            $("#tipo_selector option[value=" + '@Model.Tipo' + "]").prop('selected', true);
            $('.bs-select').selectpicker({
                iconBase: 'fa',
                tickIcon: 'fa-check'
            });
        });

        function checkPermisoRecursivo(nodos, context) {
            $(nodos).each(function (i) {
                if ($(this).data("checked").toString() == "True") {
                    context.select_node($(this));
                } else {
                    context.deselect_node($(this));
                }
                context.refresh();
                var childNodes = context.get_children_dom($(this));
                checkPermisoRecursivo(childNodes, context);
            });
        }

        function getPermisos() {
            var concat = '';
            $('.jstree-clicked').each(function () {
                concat = concat.length == 0 ? $(this).parent().data("idperm") : concat + ',' + $(this).parent().data("idperm");
            });
            $('.jstree-undetermined').each(function () {
                concat = concat.length == 0 ? $(this).parent().parent().data("idperm") : concat + ',' + $(this).parent().parent().data("idperm");
            });
            $("#PermisosPerfiles").val(concat);
        }

        function MostrarMensaje(msj) {
            //$("#mensajeErrorPerfil").show();
            //$("#mensajeErrorPerfil").attr('class', 'alert alert-danger');
            //$("#mensajeErrorPerfil").html(msj);
            showAlertError(msj);
        }

        function ProcesarPerfil() {
            //$("#mensajeErrorPerfil").hide();
            //$("#mensajeErrorPerfil").html('');
            limpiarAlerta();
            getPermisos();
            if (isEmpty($("#Nombre").val())) {
                MostrarMensaje('Ingrese un nombre de perfil válido.'); return false;
            }
            if (isEmpty($("#Decripcion").val())) {
                MostrarMensaje('Ingrese una descripción válida.'); return false;
            }
            if ($("#PermisosPerfiles").val().length == 0) {
                MostrarMensaje('Debe seleccionar al menos una función disponible.'); return false;
            }
            var tipoUsuario = @oUsuario.TipoUsuario;
            var tipoNormal = @((int)TipoUsuario.TipoNormal);
            var tipo = 0;
            if(tipoUsuario == tipoNormal)
            {
                tipo = tipoNormal;
            }else{
                tipo = $("#tipo_selector").val()
            }

            BloquearPantalla();
            $.ajax({
                url: "@Url.Action(accion, "Perfil")",
                cache: false,
                data: {
                    idPer: $("#PerfilId").val(),
                    nomPer: $("#Nombre").val(),
                    descPer: $("#Decripcion").val(),
                    PermisosPerfiles: $("#PermisosPerfiles").val(),
                    tipo: tipo,
                    habilitadoPer: $("#EstadoPerfil").is(":checked")
                },
                type: "POST",
                dataType: "script"
            }).complete(function () {
                DesbloquearPantalla();
            }).done(function () {
                DesbloquearPantalla();
            }).error(function () {
                DesbloquearPantalla();
            });
        }

        function volverPerfil() {
            $("#btn_cancelar").click();
            BloquearPantalla();
            redireccionar('@Url.Action("Index", "Perfil")');
        }
    </script>
}

<div class="page-head">
    <div class="page-title">
        <h1>
            Perfiles
            <small>@ViewBag.Title</small>
        </h1>
    </div>
</div>
<ul class="page-breadcrumb breadcrumb">
    <li>
        <a href="@Url.Action("Index", "Inicio")">Principal</a>
        <i class="fa fa-angle-right"></i>
    </li>
    <li>
        <a href="@Url.Action("Index", "Perfil")">Perfiles</a>
        <i class="fa fa-circle"></i>
    </li>
    <li>
        <span class="active">@ViewBag.Title</span>
    </li>
</ul>

<div class="row">
    <div class="col-md-12">
        <div class="panel">
            <div class="panel-body">
                @Html.HiddenFor(x => x.PerfilId)
                <input type="hidden" id="PermisosPerfiles" name="PermisosPerfiles" value="" />
                <div class="row example-row">
                    <div class="col-md-12">
                        <div class="form-group form-md-line-input form-md-floating-label">
                            @Html.TextBoxFor(x => x.Nombre, new { @class = "form-control", @maxlength = "30" })
                            @Html.LabelFor(x => x.Nombre, "Nombre")
                        </div>
                        <div class="form-group form-md-line-input form-md-floating-label">
                            @Html.TextBoxFor(x => x.Decripcion, new { @class = "form-control js-auto-size", @maxlength = "145" })
                            @Html.LabelFor(x => x.Decripcion, "Descripción")
                        </div>
                    </div><!--.col-md-9-->
                </div><!--.row-->
                @{
                    if (oUsuario.TipoUsuario != (int)TipoUsuario.TipoNormal)
                    {
                        <label class="control-label"> Tipo </label>
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <select id="tipo_selector" class="bs-select form-control">
                                        @if (oUsuario.TipoUsuario <= (int)TipoUsuario.TipoCC)
                                        {
                                            <option value="0">Super Administrador</option>
                                        }
                                        @if (oUsuario.TipoUsuario <= (int)TipoUsuario.TipoAdministrador)
                                        {
                                            <option value="1">Administrador</option>
                                        }
                                        <option value="2">Normal</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    }
                }
                <h4>Permisos disponibles</h4>
                <div id="perfilesPermisos" class="arbolContenedor" style="width:280px">
                    <ul>
                        @{
                            if (Permisos != null)
                            {
                                foreach (var p in Permisos)
                                {
                                    @Html.Partial("_ListadoPermisos", p)
                                }
                            }
                        }
                    </ul>
                </div>
                <br />
                <div class="md-checkbox">
                    @if (!string.IsNullOrEmpty(Model.TituloDeshabilitar))
                    {
                        <input type="checkbox" id="EstadoPerfil" disabled class="md-check">
                    }
                    else
                    {
                        <input type="checkbox" id="EstadoPerfil" class="md-check">
                    }
                    <label title="@Model.TituloDeshabilitar" for="EstadoPerfil">
                        <span></span>
                        <span class="check"></span>
                        <span class="box"></span> Habilitado
                    </label>
                </div>
                <br />
                <button class="btn btn-blue" data-toggle="modal" data-target="#defaultModal">Volver</button>
                <input type="button" value="@lblBotonGuardar" class="btn btn-pink" onclick="ProcesarPerfil()" />
            </div>
        </div><!--.panel-->
    </div><!--.col-md-12-->
</div><!--.row-->
<!-- Modals -->
<div class="modal scale fade" id="defaultModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Diálogo de confirmación</h4>
            </div>
            <div class="modal-body">
                ¿Está seguro que desea cancelar la operación y volver a la lista de perfiles sin guardar los cambios?
            </div>
            <div class="modal-footer">
                <button id="btn_cancelar" type="button" class="btn btn-flat btn-default" data-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-flat btn-primary" onclick="volverPerfil()">Aceptar</button>
            </div>
        </div><!--.modal-content-->
    </div><!--.modal-dialog-->
</div><!--.modal-->